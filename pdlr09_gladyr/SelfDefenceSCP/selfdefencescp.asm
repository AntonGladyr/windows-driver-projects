; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	c:\radasm\wdk\projects\driver_projects\pdlr09_gladyr\selfdefencescp\selfdefencescp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_serviceName
PUBLIC	_symbolicLinkName
PUBLIC	_imageName
_DATA	SEGMENT
_serviceName DB	'SelfDefence', 00H
_symbolicLinkName DB '\\.\SelfDefence', 00H
_imageName DB	'SelfDefence.sys', 00H
_DATA	ENDS
PUBLIC	??_C@_0BI@LGCNFJIL@?6Press?5?8Enter?8?5to?5exit?6?$AA@ ; `string'
PUBLIC	??_C@_0CN@JEBFDAOH@?6Can?8t?5delete?5service?5?8?$CFs?8?4?5Erro@ ; `string'
PUBLIC	??_C@_0BG@HLANJPHO@?6Service?5?8?$CFs?8?5deleted?$AA@ ; `string'
PUBLIC	??_C@_0CL@DNLIHKOL@?6Can?8t?5stop?5service?5?8?$CFs?8?4?5ErrorC@ ; `string'
PUBLIC	??_C@_0BG@GNCMMNDN@?6Service?5?8?$CFs?8?5stopped?$AA@ ; `string'
PUBLIC	??_C@_0CO@POCCCMPB@?6IOCTL_PROCESS_LOCK?5failed?4?5Erro@ ; `string'
PUBLIC	??_C@_0DD@MFFLKDPC@?6Once?5again?5try?5to?5kill?5the?5proc@ ; `string'
PUBLIC	??_C@_0CO@HOOGFMFJ@?6Try?5to?5kill?5the?5process?5with?5th@ ; `string'
PUBLIC	??_C@_0BI@LGNPFHGI@?6Then?5press?5?8Enter?8?5?4?4?4?$AA@ ; `string'
PUBLIC	??_C@_0DB@HNPALFON@?6Can?8t?5open?5symbolik?5link?5?8?$CFs?8?4?5@ ; `string'
PUBLIC	??_C@_0CN@NIILNDPD@?6Can?8t?5start?5service?5?8?$CFs?8?4?5Error@ ; `string'
PUBLIC	??_C@_0BO@FMFCEEJB@?6Service?5?8?$CFs?8?5already?5running?$AA@ ; `string'
PUBLIC	??_C@_0BG@KCIEGIHK@?6Service?5?8?$CFs?8?5started?$AA@ ; `string'
PUBLIC	??_C@_0CN@LJAJMOLA@?6Can?8t?5create?5service?5?8?$CFs?8?4?5Erro@ ; `string'
PUBLIC	??_C@_0BG@BDOMDCP@?6Service?5?8?$CFs?8?5created?$AA@ ; `string'
PUBLIC	??_C@_0DO@DMADPKCI@?6Can?8t?5get?5full?5path?5for?5service@ ; `string'
PUBLIC	??_C@_0DJ@MAJKNFIF@?6Can?8t?5open?5service?5?8?$CFs?8?4?5ErrorC@ ; `string'
PUBLIC	??_C@_0BF@HJJJKPCP@?6Service?5?8?$CFs?8?5opened?$AA@ ; `string'
PUBLIC	??_C@_0DF@NHKGILHH@?6Can?8t?5open?5Service?5Control?5Mana@ ; `string'
PUBLIC	??_C@_0BO@OGPOAGEO@?O?p?n?c?p?$OA?l?$OA?5?s?o?p?$OA?b?k?$LD?m?m?$PP?5?d?p?$OA?i?b?e?p?n?l?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	__imp__CloseServiceHandle@4:PROC
EXTRN	__imp__DeleteService@4:PROC
EXTRN	__imp__ControlService@12:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__getchar:PROC
EXTRN	__imp__DeviceIoControl@32:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__imp__StartServiceA@12:PROC
EXTRN	__imp__CreateServiceA@52:PROC
EXTRN	__imp__GetFullPathNameA@16:PROC
EXTRN	__imp__OpenServiceA@12:PROC
EXTRN	__imp__printf:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__OpenSCManagerA@12:PROC
EXTRN	__imp__SetConsoleTitleA@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BI@LGCNFJIL@?6Press?5?8Enter?8?5to?5exit?6?$AA@
; File c:\radasm\wdk\projects\driver_projects\pdlr09_gladyr\selfdefencescp\selfdefencescp.c
CONST	SEGMENT
??_C@_0BI@LGCNFJIL@?6Press?5?8Enter?8?5to?5exit?6?$AA@ DB 0aH, 'Press ''E'
	DB	'nter'' to exit', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JEBFDAOH@?6Can?8t?5delete?5service?5?8?$CFs?8?4?5Erro@
CONST	SEGMENT
??_C@_0CN@JEBFDAOH@?6Can?8t?5delete?5service?5?8?$CFs?8?4?5Erro@ DB 0aH, 'C'
	DB	'an''t delete service ''%s''. ErrorCode=0x%0X.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HLANJPHO@?6Service?5?8?$CFs?8?5deleted?$AA@
CONST	SEGMENT
??_C@_0BG@HLANJPHO@?6Service?5?8?$CFs?8?5deleted?$AA@ DB 0aH, 'Service '''
	DB	'%s'' deleted', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DNLIHKOL@?6Can?8t?5stop?5service?5?8?$CFs?8?4?5ErrorC@
CONST	SEGMENT
??_C@_0CL@DNLIHKOL@?6Can?8t?5stop?5service?5?8?$CFs?8?4?5ErrorC@ DB 0aH, 'C'
	DB	'an''t stop service ''%s''. ErrorCode=0x%0X.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GNCMMNDN@?6Service?5?8?$CFs?8?5stopped?$AA@
CONST	SEGMENT
??_C@_0BG@GNCMMNDN@?6Service?5?8?$CFs?8?5stopped?$AA@ DB 0aH, 'Service '''
	DB	'%s'' stopped', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@POCCCMPB@?6IOCTL_PROCESS_LOCK?5failed?4?5Erro@
CONST	SEGMENT
??_C@_0CO@POCCCMPB@?6IOCTL_PROCESS_LOCK?5failed?4?5Erro@ DB 0aH, 'IOCTL_P'
	DB	'ROCESS_LOCK failed. ErrorCode=0x%08X.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MFFLKDPC@?6Once?5again?5try?5to?5kill?5the?5proc@
CONST	SEGMENT
??_C@_0DD@MFFLKDPC@?6Once?5again?5try?5to?5kill?5the?5proc@ DB 0aH, 'Once'
	DB	' again try to kill the process with PID %d %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@HOOGFMFJ@?6Try?5to?5kill?5the?5process?5with?5th@
CONST	SEGMENT
??_C@_0CO@HOOGFMFJ@?6Try?5to?5kill?5the?5process?5with?5th@ DB 0aH, 'Try '
	DB	'to kill the process with the PID = %d %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LGNPFHGI@?6Then?5press?5?8Enter?8?5?4?4?4?$AA@
CONST	SEGMENT
??_C@_0BI@LGNPFHGI@?6Then?5press?5?8Enter?8?5?4?4?4?$AA@ DB 0aH, 'Then pr'
	DB	'ess ''Enter'' ...', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@HNPALFON@?6Can?8t?5open?5symbolik?5link?5?8?$CFs?8?4?5@
CONST	SEGMENT
??_C@_0DB@HNPALFON@?6Can?8t?5open?5symbolik?5link?5?8?$CFs?8?4?5@ DB 0aH, 'C'
	DB	'an''t open symbolik link ''%s''. ErrorCode=0x%0X.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@NIILNDPD@?6Can?8t?5start?5service?5?8?$CFs?8?4?5Error@
CONST	SEGMENT
??_C@_0CN@NIILNDPD@?6Can?8t?5start?5service?5?8?$CFs?8?4?5Error@ DB 0aH, 'C'
	DB	'an''t start service ''%s''. ErrorCode=0x%08X.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FMFCEEJB@?6Service?5?8?$CFs?8?5already?5running?$AA@
CONST	SEGMENT
??_C@_0BO@FMFCEEJB@?6Service?5?8?$CFs?8?5already?5running?$AA@ DB 0aH, 'S'
	DB	'ervice ''%s'' already running', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KCIEGIHK@?6Service?5?8?$CFs?8?5started?$AA@
CONST	SEGMENT
??_C@_0BG@KCIEGIHK@?6Service?5?8?$CFs?8?5started?$AA@ DB 0aH, 'Service '''
	DB	'%s'' started', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@LJAJMOLA@?6Can?8t?5create?5service?5?8?$CFs?8?4?5Erro@
CONST	SEGMENT
??_C@_0CN@LJAJMOLA@?6Can?8t?5create?5service?5?8?$CFs?8?4?5Erro@ DB 0aH, 'C'
	DB	'an''t create service ''%s''. ErrorCode=0x%0X.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BDOMDCP@?6Service?5?8?$CFs?8?5created?$AA@
CONST	SEGMENT
??_C@_0BG@BDOMDCP@?6Service?5?8?$CFs?8?5created?$AA@ DB 0aH, 'Service ''%'
	DB	's'' created', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@DMADPKCI@?6Can?8t?5get?5full?5path?5for?5service@
CONST	SEGMENT
??_C@_0DO@DMADPKCI@?6Can?8t?5get?5full?5path?5for?5service@ DB 0aH, 'Can'''
	DB	't get full path for service image ''%s''. ErrorCode=0x%0X.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MAJKNFIF@?6Can?8t?5open?5service?5?8?$CFs?8?4?5ErrorC@
CONST	SEGMENT
??_C@_0DJ@MAJKNFIF@?6Can?8t?5open?5service?5?8?$CFs?8?4?5ErrorC@ DB 0aH, 'C'
	DB	'an''t open service ''%s''. ErrorCode=0x%0X.', 0aH, 'Try creat'
	DB	'e...', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HJJJKPCP@?6Service?5?8?$CFs?8?5opened?$AA@
CONST	SEGMENT
??_C@_0BF@HJJJKPCP@?6Service?5?8?$CFs?8?5opened?$AA@ DB 0aH, 'Service ''%'
	DB	's'' opened', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NHKGILHH@?6Can?8t?5open?5Service?5Control?5Mana@
CONST	SEGMENT
??_C@_0DF@NHKGILHH@?6Can?8t?5open?5Service?5Control?5Mana@ DB 0aH, 'Can'''
	DB	't open Service Control Manager. ErrorCode=0x%0X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OGPOAGEO@?O?p?n?c?p?$OA?l?$OA?5?s?o?p?$OA?b?k?$LD?m?m?$PP?5?d?p?$OA?i?b?e?p?n?l?$AA@
CONST	SEGMENT
??_C@_0BO@OGPOAGEO@?O?p?n?c?p?$OA?l?$OA?5?s?o?p?$OA?b?k?$LD?m?m?$PP?5?d?p?$OA?i?b?e?p?n?l?$AA@ DB 0cfH
	DB	0f0H, 0eeH, 0e3H, 0f0H, 0e0H, 0ecH, 0e0H, ' ', 0f3H, 0efH, 0f0H
	DB	0e0H, 0e2H, 0ebH, 0b3H, 0edH, 0edH, 0ffH, ' ', 0e4H, 0f0H, 0e0H
	DB	0e9H, 0e2H, 0e5H, 0f0H, 0eeH, 0ecH, 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_statusBefore$ = -584					; size = 4
_lastError$ = -580					; size = 4
_processId$ = -576					; size = 4
_serviceStatus$ = -572					; size = 28
_counterBytes$ = -544					; size = 4
_scm$ = -540						; size = 4
_service$ = -536					; size = 4
_device$ = -532						; size = 4
_fullImagePath$ = -528					; size = 520
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT

; 4    : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 584				; 00000248H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5    : 	HANDLE				scm = NULL;

	mov	DWORD PTR _scm$[ebp], 0

; 6    : 	HANDLE				service = NULL;

	mov	DWORD PTR _service$[ebp], 0

; 7    : 	HANDLE				device = INVALID_HANDLE_VALUE;

	mov	DWORD PTR _device$[ebp], -1

; 8    : 	DWORD				counterBytes = 0;

	mov	DWORD PTR _counterBytes$[ebp], 0

; 9    : 	DWORD				lastError = ERROR_SUCCESS;

	mov	DWORD PTR _lastError$[ebp], 0

; 10   : 	DWORD				statusBefore = SERVICE_NOT_INSTALLED;

	mov	DWORD PTR _statusBefore$[ebp], 0

; 11   : 	TCHAR				fullImagePath[2*MAX_PATH] = {0};

	mov	BYTE PTR _fullImagePath$[ebp], 0
	push	519					; 00000207H
	push	0
	lea	eax, DWORD PTR _fullImagePath$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 12   : 	SERVICE_STATUS		serviceStatus = {0};

	mov	DWORD PTR _serviceStatus$[ebp], 0
	xor	ecx, ecx
	mov	DWORD PTR _serviceStatus$[ebp+4], ecx
	mov	DWORD PTR _serviceStatus$[ebp+8], ecx
	mov	DWORD PTR _serviceStatus$[ebp+12], ecx
	mov	DWORD PTR _serviceStatus$[ebp+16], ecx
	mov	DWORD PTR _serviceStatus$[ebp+20], ecx
	mov	DWORD PTR _serviceStatus$[ebp+24], ecx

; 13   : 	HANDLE				processId = 0;

	mov	DWORD PTR _processId$[ebp], 0

; 14   : 
; 15   : 	SetConsoleTitle(_TEXT("Програма управління драйвером"));

	push	OFFSET ??_C@_0BO@OGPOAGEO@?O?p?n?c?p?$OA?l?$OA?5?s?o?p?$OA?b?k?$LD?m?m?$PP?5?d?p?$OA?i?b?e?p?n?l?$AA@
	call	DWORD PTR __imp__SetConsoleTitleA@4

; 16   : 	scm = OpenSCManager(NULL, NULL, SC_MANAGER_ALL_ACCESS);

	push	983103					; 000f003fH
	push	0
	push	0
	call	DWORD PTR __imp__OpenSCManagerA@12
	mov	DWORD PTR _scm$[ebp], eax

; 17   : 	if(!scm)

	cmp	DWORD PTR _scm$[ebp], 0
	jne	SHORT $LN26@main

; 18   : 	{
; 19   : 		lastError = GetLastError();

	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _lastError$[ebp], eax

; 20   : 		_tprintf(_TEXT("\nCan't open Service Control Manager. ErrorCode=0x%0X"), lastError);

	mov	edx, DWORD PTR _lastError$[ebp]
	push	edx
	push	OFFSET ??_C@_0DF@NHKGILHH@?6Can?8t?5open?5Service?5Control?5Mana@
	call	DWORD PTR __imp__printf
	add	esp, 8

; 21   : 		return lastError;

	mov	eax, DWORD PTR _lastError$[ebp]
	jmp	$LN27@main
$LN26@main:

; 22   : 	}
; 23   : 
; 24   : 	service = OpenService(scm, serviceName,	SERVICE_START + SERVICE_STOP);

	push	48					; 00000030H
	push	OFFSET _serviceName
	mov	eax, DWORD PTR _scm$[ebp]
	push	eax
	call	DWORD PTR __imp__OpenServiceA@12
	mov	DWORD PTR _service$[ebp], eax

; 25   : 	if(service)

	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN25@main

; 26   : 	{
; 27   : 		statusBefore |= SERVICE_OPENED;

	mov	ecx, DWORD PTR _statusBefore$[ebp]
	or	ecx, 8
	mov	DWORD PTR _statusBefore$[ebp], ecx

; 28   : 		_tprintf(_TEXT("\nService '%s' opened"), serviceName);

	push	OFFSET _serviceName
	push	OFFSET ??_C@_0BF@HJJJKPCP@?6Service?5?8?$CFs?8?5opened?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8

; 29   : 	}
; 30   : 	else

	jmp	$LN24@main
$LN25@main:

; 31   : 	{
; 32   : 		_tprintf(_TEXT("\nCan't open service '%s'. ErrorCode=0x%0X.\nTry create..."), 
; 33   : 					serviceName, GetLastError());

	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET _serviceName
	push	OFFSET ??_C@_0DJ@MAJKNFIF@?6Can?8t?5open?5service?5?8?$CFs?8?4?5ErrorC@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH

; 34   : 		counterBytes = GetFullPathName(
; 35   : 								imageName,
; 36   : 								sizeof (fullImagePath)/sizeof(TCHAR), 
; 37   : 								fullImagePath, NULL);

	push	0
	lea	edx, DWORD PTR _fullImagePath$[ebp]
	push	edx
	push	520					; 00000208H
	push	OFFSET _imageName
	call	DWORD PTR __imp__GetFullPathNameA@16
	mov	DWORD PTR _counterBytes$[ebp], eax

; 38   : 		if(counterBytes == 0 || counterBytes > sizeof (fullImagePath)/sizeof(TCHAR))

	cmp	DWORD PTR _counterBytes$[ebp], 0
	je	SHORT $LN22@main
	cmp	DWORD PTR _counterBytes$[ebp], 520	; 00000208H
	jbe	SHORT $LN23@main
$LN22@main:

; 39   : 		{
; 40   : 			lastError = GetLastError();

	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _lastError$[ebp], eax

; 41   : 			_tprintf(_TEXT("\nCan't get full path for service image '%s'. ErrorCode=0x%0X."), 
; 42   : 						imageName, lastError);

	mov	eax, DWORD PTR _lastError$[ebp]
	push	eax
	push	OFFSET _imageName
	push	OFFSET ??_C@_0DO@DMADPKCI@?6Can?8t?5get?5full?5path?5for?5service@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH

; 43   : 		}
; 44   : 		else

	jmp	$LN24@main
$LN23@main:

; 45   : 		{
; 46   : 			service = CreateService(
; 47   : 							scm,
; 48   : 							serviceName,
; 49   : 							serviceName,
; 50   : 							SERVICE_START + SERVICE_STOP + DELETE,
; 51   : 							SERVICE_KERNEL_DRIVER,
; 52   : 							SERVICE_DEMAND_START,
; 53   : 							SERVICE_ERROR_IGNORE,
; 54   : 							fullImagePath,
; 55   : 							NULL, NULL, NULL, NULL, NULL);

	push	0
	push	0
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _fullImagePath$[ebp]
	push	ecx
	push	0
	push	3
	push	1
	push	65584					; 00010030H
	push	OFFSET _serviceName
	push	OFFSET _serviceName
	mov	edx, DWORD PTR _scm$[ebp]
	push	edx
	call	DWORD PTR __imp__CreateServiceA@52
	mov	DWORD PTR _service$[ebp], eax

; 56   : 			if(service)

	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN20@main

; 57   : 			{
; 58   : 				statusBefore |= SERVICE_INSTALLED;

	mov	eax, DWORD PTR _statusBefore$[ebp]
	or	eax, 1
	mov	DWORD PTR _statusBefore$[ebp], eax

; 59   : 				_tprintf(_TEXT("\nService '%s' created"), serviceName);

	push	OFFSET _serviceName
	push	OFFSET ??_C@_0BG@BDOMDCP@?6Service?5?8?$CFs?8?5created?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8

; 60   : 			}
; 61   : 			else

	jmp	SHORT $LN24@main
$LN20@main:

; 62   : 			{
; 63   : 				lastError = GetLastError();

	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _lastError$[ebp], eax

; 64   : 				_tprintf(_TEXT("\nCan't create service '%s'. ErrorCode=0x%0X."),
; 65   : 						 serviceName, lastError);

	mov	ecx, DWORD PTR _lastError$[ebp]
	push	ecx
	push	OFFSET _serviceName
	push	OFFSET ??_C@_0CN@LJAJMOLA@?6Can?8t?5create?5service?5?8?$CFs?8?4?5Erro@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
$LN24@main:

; 66   : 			}
; 67   : 		}
; 68   : 	}
; 69   : 
; 70   : 	if(service)

	cmp	DWORD PTR _service$[ebp], 0
	je	$LN18@main

; 71   : 	{
; 72   : 		if( StartService(service, 0, NULL) )

	push	0
	push	0
	mov	edx, DWORD PTR _service$[ebp]
	push	edx
	call	DWORD PTR __imp__StartServiceA@12
	test	eax, eax
	je	SHORT $LN17@main

; 73   : 		{
; 74   : 			statusBefore |= SERVICE_STARTED;

	mov	eax, DWORD PTR _statusBefore$[ebp]
	or	eax, 2
	mov	DWORD PTR _statusBefore$[ebp], eax

; 75   : 			_tprintf(_TEXT("\nService '%s' started"), serviceName);

	push	OFFSET _serviceName
	push	OFFSET ??_C@_0BG@KCIEGIHK@?6Service?5?8?$CFs?8?5started?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8

; 76   : 		}
; 77   : 		else

	jmp	SHORT $LN16@main
$LN17@main:

; 78   : 		{
; 79   : 			lastError = GetLastError();

	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _lastError$[ebp], eax

; 80   : 			if(ERROR_SERVICE_ALREADY_RUNNING == lastError)

	cmp	DWORD PTR _lastError$[ebp], 1056	; 00000420H
	jne	SHORT $LN15@main

; 81   : 			{
; 82   : 				_tprintf(_TEXT("\nService '%s' already running"), serviceName);

	push	OFFSET _serviceName
	push	OFFSET ??_C@_0BO@FMFCEEJB@?6Service?5?8?$CFs?8?5already?5running?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8

; 83   : 				statusBefore |= SERVICE_RUNNING;

	mov	ecx, DWORD PTR _statusBefore$[ebp]
	or	ecx, 4
	mov	DWORD PTR _statusBefore$[ebp], ecx

; 84   : 			}
; 85   : 			else

	jmp	SHORT $LN16@main
$LN15@main:

; 86   : 			{
; 87   : 				_tprintf(_TEXT("\nCan't start service '%s'. ErrorCode=0x%08X."),
; 88   : 							serviceName, lastError);

	mov	edx, DWORD PTR _lastError$[ebp]
	push	edx
	push	OFFSET _serviceName
	push	OFFSET ??_C@_0CN@NIILNDPD@?6Can?8t?5start?5service?5?8?$CFs?8?4?5Error@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
$LN16@main:

; 89   : 			}
; 90   : 		}
; 91   : 		
; 92   : 		if( (statusBefore & SERVICE_STARTED) || (statusBefore & SERVICE_RUNNING) )

	mov	eax, DWORD PTR _statusBefore$[ebp]
	and	eax, 2
	jne	SHORT $LN12@main
	mov	ecx, DWORD PTR _statusBefore$[ebp]
	and	ecx, 4
	je	$LN18@main
$LN12@main:

; 93   : 		{
; 94   : 			device = CreateFile(
; 95   : 						symbolicLinkName,
; 96   : 						GENERIC_READ + GENERIC_WRITE, 0, NULL,
; 97   : 						OPEN_EXISTING, 0, NULL);

	push	0
	push	0
	push	3
	push	0
	push	0
	push	-1073741824				; c0000000H
	push	OFFSET _symbolicLinkName
	call	DWORD PTR __imp__CreateFileA@28
	mov	DWORD PTR _device$[ebp], eax

; 98   : 			
; 99   : 			if(INVALID_HANDLE_VALUE == device)

	cmp	DWORD PTR _device$[ebp], -1
	jne	SHORT $LN11@main

; 100  : 			{
; 101  : 				lastError = GetLastError();

	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _lastError$[ebp], eax

; 102  : 				_tprintf(_TEXT("\nCan't open symbolik link '%s'. ErrorCode=0x%0X."),
; 103  : 							symbolicLinkName, lastError);

	mov	edx, DWORD PTR _lastError$[ebp]
	push	edx
	push	OFFSET _symbolicLinkName
	push	OFFSET ??_C@_0DB@HNPALFON@?6Can?8t?5open?5symbolik?5link?5?8?$CFs?8?4?5@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH

; 104  : 			}
; 105  : 			else

	jmp	$LN18@main
$LN11@main:

; 106  : 			{
; 107  : 				processId = (HANDLE)GetCurrentProcessId();

	call	DWORD PTR __imp__GetCurrentProcessId@0
	mov	DWORD PTR _processId$[ebp], eax

; 108  : 				if(DeviceIoControl(	device,
; 109  : 									IOCTL_PROCESS_LOCK,
; 110  : 									&processId,
; 111  : 									sizeof(HANDLE),
; 112  : 									(PVOID)NULL, 
; 113  : 									(DWORD)0,
; 114  : 									&counterBytes, NULL)	)

	push	0
	lea	eax, DWORD PTR _counterBytes$[ebp]
	push	eax
	push	0
	push	0
	push	4
	lea	ecx, DWORD PTR _processId$[ebp]
	push	ecx
	push	2236416					; 00222000H
	mov	edx, DWORD PTR _device$[ebp]
	push	edx
	call	DWORD PTR __imp__DeviceIoControl@32
	test	eax, eax
	je	SHORT $LN9@main

; 115  : 				
; 116  : 				{
; 117  : 					_tprintf(_TEXT("\nTry to kill the process with the PID = %d %s"), processId,
; 118  : 							_TEXT("\nThen press 'Enter' ...") );

	push	OFFSET ??_C@_0BI@LGNPFHGI@?6Then?5press?5?8Enter?8?5?4?4?4?$AA@
	mov	eax, DWORD PTR _processId$[ebp]
	push	eax
	push	OFFSET ??_C@_0CO@HOOGFMFJ@?6Try?5to?5kill?5the?5process?5with?5th@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH

; 119  : 					
; 120  : 					_gettchar();		

	call	DWORD PTR __imp__getchar

; 121  : 					if(DeviceIoControl(	device,
; 122  : 										IOCTL_PROCESS_UNLOCK,
; 123  : 										&processId,
; 124  : 										sizeof(HANDLE),
; 125  : 										(PVOID)NULL, 
; 126  : 										(DWORD)0,
; 127  : 										&counterBytes, NULL)	)

	push	0
	lea	ecx, DWORD PTR _counterBytes$[ebp]
	push	ecx
	push	0
	push	0
	push	4
	lea	edx, DWORD PTR _processId$[ebp]
	push	edx
	push	2236420					; 00222004H
	mov	eax, DWORD PTR _device$[ebp]
	push	eax
	call	DWORD PTR __imp__DeviceIoControl@32
	test	eax, eax
	je	SHORT $LN8@main

; 128  : 					{
; 129  : 						_tprintf(_TEXT("\nOnce again try to kill the process with PID %d %s"), 
; 130  : 								processId, _TEXT("\nThen press 'Enter' ...") );

	push	OFFSET ??_C@_0BI@LGNPFHGI@?6Then?5press?5?8Enter?8?5?4?4?4?$AA@
	mov	ecx, DWORD PTR _processId$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DD@MFFLKDPC@?6Once?5again?5try?5to?5kill?5the?5proc@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH

; 131  : 						_gettchar();		

	call	DWORD PTR __imp__getchar
$LN8@main:

; 132  : 	
; 133  : 					}								
; 134  : 				}
; 135  : 				else

	jmp	SHORT $LN7@main
$LN9@main:

; 136  : 				{
; 137  : 					_tprintf(_TEXT("\nIOCTL_PROCESS_LOCK failed. ErrorCode=0x%08X."),
; 138  : 							 GetLastError());

	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET ??_C@_0CO@POCCCMPB@?6IOCTL_PROCESS_LOCK?5failed?4?5Erro@
	call	DWORD PTR __imp__printf
	add	esp, 8
$LN7@main:

; 139  : 				}
; 140  : 				CloseHandle(device);

	mov	edx, DWORD PTR _device$[ebp]
	push	edx
	call	DWORD PTR __imp__CloseHandle@4
$LN18@main:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	if(statusBefore & SERVICE_STARTED)

	mov	eax, DWORD PTR _statusBefore$[ebp]
	and	eax, 2
	je	SHORT $LN6@main

; 146  : 	{
; 147  : 		if(ControlService(service, SERVICE_CONTROL_STOP, &serviceStatus))

	lea	ecx, DWORD PTR _serviceStatus$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _service$[ebp]
	push	edx
	call	DWORD PTR __imp__ControlService@12
	test	eax, eax
	je	SHORT $LN5@main

; 148  : 		{
; 149  : 			_tprintf(_TEXT("\nService '%s' stopped"), serviceName);

	push	OFFSET _serviceName
	push	OFFSET ??_C@_0BG@GNCMMNDN@?6Service?5?8?$CFs?8?5stopped?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8

; 150  : 		}
; 151  : 		else

	jmp	SHORT $LN6@main
$LN5@main:

; 152  : 		{
; 153  : 			lastError = GetLastError();

	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _lastError$[ebp], eax

; 154  : 			_tprintf(_TEXT("\nCan't stop service '%s'. ErrorCode=0x%0X."),
; 155  : 						 serviceName, lastError);

	mov	eax, DWORD PTR _lastError$[ebp]
	push	eax
	push	OFFSET _serviceName
	push	OFFSET ??_C@_0CL@DNLIHKOL@?6Can?8t?5stop?5service?5?8?$CFs?8?4?5ErrorC@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
$LN6@main:

; 156  : 		}
; 157  : 	}
; 158  : 	if( (statusBefore & SERVICE_INSTALLED) && (SERVICE_STOPPED == serviceStatus.dwCurrentState) )

	mov	ecx, DWORD PTR _statusBefore$[ebp]
	and	ecx, 1
	je	SHORT $LN3@main
	cmp	DWORD PTR _serviceStatus$[ebp+4], 1
	jne	SHORT $LN3@main

; 159  : 	{
; 160  : 		if( DeleteService(service) )

	mov	edx, DWORD PTR _service$[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteService@4
	test	eax, eax
	je	SHORT $LN2@main

; 161  : 		{
; 162  : 			_tprintf(_TEXT("\nService '%s' deleted"), serviceName);

	push	OFFSET _serviceName
	push	OFFSET ??_C@_0BG@HLANJPHO@?6Service?5?8?$CFs?8?5deleted?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8

; 163  : 		}
; 164  : 		else

	jmp	SHORT $LN3@main
$LN2@main:

; 165  : 		{
; 166  : 			lastError = GetLastError();

	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _lastError$[ebp], eax

; 167  : 			_tprintf(_TEXT("\nCan't delete service '%s'. ErrorCode=0x%0X."),
; 168  : 						 serviceName, lastError);

	mov	eax, DWORD PTR _lastError$[ebp]
	push	eax
	push	OFFSET _serviceName
	push	OFFSET ??_C@_0CN@JEBFDAOH@?6Can?8t?5delete?5service?5?8?$CFs?8?4?5Erro@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
$LN3@main:

; 169  : 		}
; 170  : 	}
; 171  : 
; 172  : 	CloseServiceHandle(service);

	mov	ecx, DWORD PTR _service$[ebp]
	push	ecx
	call	DWORD PTR __imp__CloseServiceHandle@4

; 173  : 	CloseServiceHandle(scm);

	mov	edx, DWORD PTR _scm$[ebp]
	push	edx
	call	DWORD PTR __imp__CloseServiceHandle@4

; 174  : 	_tprintf(_TEXT("\nPress 'Enter' to exit\n"));

	push	OFFSET ??_C@_0BI@LGCNFJIL@?6Press?5?8Enter?8?5to?5exit?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4

; 175  : 	_gettchar();

	call	DWORD PTR __imp__getchar

; 176  : 	return lastError;

	mov	eax, DWORD PTR _lastError$[ebp]
$LN27@main:

; 177  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
