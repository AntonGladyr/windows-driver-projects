#define DRIVER_NAMEA		       	"ProcessNotify"
#define DRIVER_NAMEW		       	L"ProcessNotify"
#define DEV_TYPE					FILE_DEVICE_UNKNOWN

#define IOCTL_START				CTL_CODE(DEV_TYPE, 0x800, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STOP				CTL_CODE(DEV_TYPE, 0x801, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_GET_INFO			CTL_CODE(DEV_TYPE, 0x802, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_GET_IMAGE_INFO	CTL_CODE(DEV_TYPE, 0x803, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IN_BUFFER_SIZE	0x100
#define OUT_BUFFER_SIZE	IN_BUFFER_SIZE

typedef struct _PROCESS_NOTIFY_INFO {
	HANDLE		ParentId;
	HANDLE		ProcessId;
	BOOLEAN	Create;
} PROCESS_NOTIFY_INFO, *PPROCESS_NOTIFY_INFO;

typedef struct _IMAGE_NOTIFY_INFO {
	PVOID  		ImageBase;
	WCHAR 		FullImageName[65535];
	SIZE_T 		ImageSize;
} IMAGE_NOTIFY_INFO, *PIMAGE_NOTIFY_INFO;

#if defined(_NTDDK_) || defined(_WDMDDK_)
	DECLARE_CONST_UNICODE_STRING(deviceName, L"\\Device\\"DRIVER_NAMEW);
	DECLARE_CONST_UNICODE_STRING(symbolicLinkName, L"\\??\\"DRIVER_NAMEW);
#else
	TCHAR	serviceName[]		= _TEXT(DRIVER_NAMEA);
	TCHAR	symbolicLinkName[]	= _TEXT("\\\\.\\")_TEXT(DRIVER_NAMEA);
	TCHAR	imageName[]			= _TEXT(DRIVER_NAMEA)_TEXT(".sys");
#endif