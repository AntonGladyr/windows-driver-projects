; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	c:\radasm\wdk\projects\driver_projects\pdlr01_gladyr\src\simplelegacydrv\simplelegacydrv.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BE@EJNNDDAI@?6Finish?5DriverEntry?$AA@PBOPGDP@ ;  ?? ::PBOPGDP::`string'
PUBLIC	??_C@_0DA@GOJIGPAG@?6CS?5?3?50x?$CF04X?5?$CI?5Index?5?$DN?5?$CFd?0?5TI?5?$DN?5@PBOPGDP@ ;  ?? ::PBOPGDP::`string'
PUBLIC	??_C@_0CA@IDOFLIB@?6Current?5process?5?3?50x?$CFX?5?$CI?5?$CFs?5?$CJ?5?$AA@PBOPGDP@ ;  ?? ::PBOPGDP::`string'
PUBLIC	??_C@_0BD@MGMNBEJK@Not?5System?5Process?$AA@PBOPGDP@ ;  ?? ::PBOPGDP::`string'
PUBLIC	??_C@_0P@DFENKFF@System?5Process?$AA@PBOPGDP@	;  ?? ::PBOPGDP::`string'
PUBLIC	??_C@_0BD@GEGANEOA@?6Current?5IRQL?5?3?5?$CFd?$AA@PBOPGDP@ ;  ?? ::PBOPGDP::`string'
PUBLIC	??_C@_0BE@HLFFNHPM@?6RegistryPath?5?3?5?$CFwZ?$AA@PBOPGDP@ ;  ?? ::PBOPGDP::`string'
PUBLIC	??_C@_0BD@KEGGLDPO@?6Start?5DriverEntry?$AA@PBOPGDP@ ;  ?? ::PBOPGDP::`string'
PUBLIC	_DriverEntry@8
EXTRN	__imp__PsInitialSystemProcess:DWORD
EXTRN	__imp__IoGetCurrentProcess@0:PROC
EXTRN	__imp__KeGetCurrentIrql@0:PROC
EXTRN	_DbgPrint:PROC
;	COMDAT ??_C@_0BE@EJNNDDAI@?6Finish?5DriverEntry?$AA@PBOPGDP@
; File c:\radasm\wdk\projects\driver_projects\pdlr01_gladyr\src\simplelegacydrv\simplelegacydrv.c
INIT$s	SEGMENT
??_C@_0BE@EJNNDDAI@?6Finish?5DriverEntry?$AA@PBOPGDP@ DB 0aH, 'Finish Dri'
	DB	'verEntry', 00H				;  ?? ::PBOPGDP::`string'
INIT$s	ENDS
;	COMDAT ??_C@_0DA@GOJIGPAG@?6CS?5?3?50x?$CF04X?5?$CI?5Index?5?$DN?5?$CFd?0?5TI?5?$DN?5@PBOPGDP@
INIT$s	SEGMENT
??_C@_0DA@GOJIGPAG@?6CS?5?3?50x?$CF04X?5?$CI?5Index?5?$DN?5?$CFd?0?5TI?5?$DN?5@PBOPGDP@ DB 0aH
	DB	'CS : 0x%04X ( Index = %d, TI = %d, CPL = %d ) ', 00H ;  ?? ::PBOPGDP::`string'
INIT$s	ENDS
;	COMDAT ??_C@_0CA@IDOFLIB@?6Current?5process?5?3?50x?$CFX?5?$CI?5?$CFs?5?$CJ?5?$AA@PBOPGDP@
INIT$s	SEGMENT
??_C@_0CA@IDOFLIB@?6Current?5process?5?3?50x?$CFX?5?$CI?5?$CFs?5?$CJ?5?$AA@PBOPGDP@ DB 0aH
	DB	'Current process : 0x%X ( %s ) ', 00H	;  ?? ::PBOPGDP::`string'
INIT$s	ENDS
;	COMDAT ??_C@_0BD@MGMNBEJK@Not?5System?5Process?$AA@PBOPGDP@
INIT$s	SEGMENT
??_C@_0BD@MGMNBEJK@Not?5System?5Process?$AA@PBOPGDP@ DB 'Not System Proce'
	DB	'ss', 00H					;  ?? ::PBOPGDP::`string'
INIT$s	ENDS
;	COMDAT ??_C@_0P@DFENKFF@System?5Process?$AA@PBOPGDP@
INIT$s	SEGMENT
??_C@_0P@DFENKFF@System?5Process?$AA@PBOPGDP@ DB 'System Process', 00H ;  ?? ::PBOPGDP::`string'
INIT$s	ENDS
;	COMDAT ??_C@_0BD@GEGANEOA@?6Current?5IRQL?5?3?5?$CFd?$AA@PBOPGDP@
INIT$s	SEGMENT
??_C@_0BD@GEGANEOA@?6Current?5IRQL?5?3?5?$CFd?$AA@PBOPGDP@ DB 0aH, 'Curre'
	DB	'nt IRQL : %d', 00H				;  ?? ::PBOPGDP::`string'
INIT$s	ENDS
;	COMDAT ??_C@_0BE@HLFFNHPM@?6RegistryPath?5?3?5?$CFwZ?$AA@PBOPGDP@
INIT$s	SEGMENT
??_C@_0BE@HLFFNHPM@?6RegistryPath?5?3?5?$CFwZ?$AA@PBOPGDP@ DB 0aH, 'Regis'
	DB	'tryPath : %wZ', 00H				;  ?? ::PBOPGDP::`string'
INIT$s	ENDS
;	COMDAT ??_C@_0BD@KEGGLDPO@?6Start?5DriverEntry?$AA@PBOPGDP@
INIT$s	SEGMENT
??_C@_0BD@KEGGLDPO@?6Start?5DriverEntry?$AA@PBOPGDP@ DB 0aH, 'Start Drive'
	DB	'rEntry', 00H				;  ?? ::PBOPGDP::`string'
; Function compile flags: /Odtp
INIT$s	ENDS
;	COMDAT _DriverEntry@8
INIT	SEGMENT
tv74 = -12						; size = 4
_selector$ = -8						; size = 2
_process$ = -4						; size = 4
_DriverObject$ = 8					; size = 4
_RegistryPath$ = 12					; size = 4
_DriverEntry@8 PROC					; COMDAT

; 9    : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 10   : 	PEPROCESS	process	= NULL;

	mov	DWORD PTR _process$[ebp], 0

; 11   : 	SELECTOR	selector	= {0};

	xor	eax, eax
	mov	WORD PTR _selector$[ebp], ax

; 12   : 	__debugbreak();

	int	3

; 13   : 	DbgPrint("\nStart DriverEntry");

	push	OFFSET ??_C@_0BD@KEGGLDPO@?6Start?5DriverEntry?$AA@PBOPGDP@
	call	_DbgPrint
	add	esp, 4

; 14   : 	DbgPrint("\nRegistryPath : %wZ", RegistryPath);

	mov	ecx, DWORD PTR _RegistryPath$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BE@HLFFNHPM@?6RegistryPath?5?3?5?$CFwZ?$AA@PBOPGDP@
	call	_DbgPrint
	add	esp, 8

; 15   : 	DbgPrint("\nCurrent IRQL : %d", KeGetCurrentIrql());

	call	DWORD PTR __imp__KeGetCurrentIrql@0
	movzx	edx, al
	push	edx
	push	OFFSET ??_C@_0BD@GEGANEOA@?6Current?5IRQL?5?3?5?$CFd?$AA@PBOPGDP@
	call	_DbgPrint
	add	esp, 8

; 16   : 	process = PsGetCurrentProcess();

	call	DWORD PTR __imp__IoGetCurrentProcess@0
	mov	DWORD PTR _process$[ebp], eax

; 17   : 	DbgPrint("\nCurrent process : 0x%X ( %s ) ", process, process == PsInitialSystemProcess  ? "System Process" : "Not System Process");  

	mov	eax, DWORD PTR __imp__PsInitialSystemProcess
	mov	ecx, DWORD PTR _process$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@DriverEntr
	mov	DWORD PTR tv74[ebp], OFFSET ??_C@_0P@DFENKFF@System?5Process?$AA@PBOPGDP@
	jmp	SHORT $LN4@DriverEntr
$LN3@DriverEntr:
	mov	DWORD PTR tv74[ebp], OFFSET ??_C@_0BD@MGMNBEJK@Not?5System?5Process?$AA@PBOPGDP@
$LN4@DriverEntr:
	mov	edx, DWORD PTR tv74[ebp]
	push	edx
	mov	eax, DWORD PTR _process$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@IDOFLIB@?6Current?5process?5?3?50x?$CFX?5?$CI?5?$CFs?5?$CJ?5?$AA@PBOPGDP@
	call	_DbgPrint
	add	esp, 12					; 0000000cH

; 18   : 	__asm { mov selector,cs}

	mov	WORD PTR _selector$[ebp], cs

; 19   : 	DbgPrint("\nCS : 0x%04X ( Index = %d, TI = %d, CPL = %d ) ", selector.u.SReg, selector.u.bits.Index, selector.u.bits.TI, selector.u.bits.CPL);

	mov	cx, WORD PTR _selector$[ebp]
	and	cx, 3
	movzx	edx, cx
	push	edx
	mov	ax, WORD PTR _selector$[ebp]
	shr	ax, 2
	and	ax, 1
	movzx	ecx, ax
	push	ecx
	mov	dx, WORD PTR _selector$[ebp]
	shr	dx, 3
	mov	eax, 8191				; 00001fffH
	and	dx, ax
	movzx	ecx, dx
	push	ecx
	movzx	edx, WORD PTR _selector$[ebp]
	push	edx
	push	OFFSET ??_C@_0DA@GOJIGPAG@?6CS?5?3?50x?$CF04X?5?$CI?5Index?5?$DN?5?$CFd?0?5TI?5?$DN?5@PBOPGDP@
	call	_DbgPrint
	add	esp, 20					; 00000014H

; 20   : 	DbgPrint("\nFinish DriverEntry");

	push	OFFSET ??_C@_0BE@EJNNDDAI@?6Finish?5DriverEntry?$AA@PBOPGDP@
	call	_DbgPrint
	add	esp, 4

; 21   : 	return STATUS_DEVICE_CONFIGURATION_ERROR;

	mov	eax, -1073741438			; c0000182H

; 22   : }

	mov	esp, ebp
	pop	ebp
	ret	8
_DriverEntry@8 ENDP
INIT	ENDS
END
